import{h as i,o as r,c as s,a as e,e as o,F as d,g as t,i as l}from"./app.7a8ebebe.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const h={},u=e("h1",{id:"current-state",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#current-state","aria-hidden":"true"},"#"),t(" Current State")],-1),f=e("p",null,"Returns the current state of an entity. Useful for using conditional logic to automation flows.",-1),p=e("h2",{id:"configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),t(" Configuration")],-1),_={id:"entity-id",tabindex:"-1"},y=e("a",{class:"header-anchor",href:"#entity-id","aria-hidden":"true"},"#",-1),g=t(" Entity ID "),b=e("li",null,[t("Type: "),e("code",null,"string")],-1),m=t("Accepts "),x={href:"/guide/mustache-templates.md",target:"_blank",rel:"noopener noreferrer"},v=t("Mustache Templates"),k=e("p",null,"The id of the entity to return.",-1),T=e("h3",{id:"if-state",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#if-state","aria-hidden":"true"},"#"),t(" If State")],-1),I=e("ul",null,[e("li",null,[t("Type: "),e("code",null,"string")])],-1),B=e("p",null,"If the conditional statement is evaluated as true send the message to the first output otherwise send it to the second output. If blank there will only be one output.",-1),S=e("p",null,[e("strong",null,"Also see:")],-1),V={href:"/guide/conditionals.md",target:"_blank",rel:"noopener noreferrer"},w=t("Conditionals"),C=l('<h3 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> For</h3><ul><li>Type: <code>number</code></li></ul><p>The amount of time the entity state needs to constant for the &quot;If state&quot; to be <code>true</code></p><h3 id="state-type" tabindex="-1"><a class="header-anchor" href="#state-type" aria-hidden="true">#</a> State Type</h3><ul><li>Type: <code>string</code></li><li>Values: <code>string|number|boolean</code></li><li>Default: <code>string</code></li></ul><p>Convert the state of the entity to the selected type. Boolean will be converted to true based on if the string is equal by default to (<code>y|yes|true|on|home|open</code>). Original value stored in <code>msg.data.original_state</code></p><h3 id="block-input-overrides" tabindex="-1"><a class="header-anchor" href="#block-input-overrides" aria-hidden="true">#</a> Block Input Overrides</h3><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>Stop msg.payload values from overriding local config</p><h2 id="inputs" tabindex="-1"><a class="header-anchor" href="#inputs" aria-hidden="true">#</a> Inputs</h2><h3 id="payload-entity-id" tabindex="-1"><a class="header-anchor" href="#payload-entity-id" aria-hidden="true">#</a> payload.entity_id</h3><ul><li><p>Type : <code>string</code></p><p>Overrides or sets the entity_id for which the current state is being fetched</p></li></ul><h2 id="outputs" tabindex="-1"><a class="header-anchor" href="#outputs" aria-hidden="true">#</a> Outputs</h2><p>Value types:</p><ul><li><code>entity</code>: full entity object</li><li><code>entity id</code>: entity id of the triggered entity</li><li><code>entity state</code>: entity state of the triggered entity</li><li><code>config</code>: config properties of the node</li></ul><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>',16),O={href:"https://home-assistant.io/docs/configuration/state_object/",target:"_blank",rel:"noopener noreferrer"},q=t("Home Assistant State Objects");function E(N,j){const a=i("Badge"),n=i("ExternalLinkIcon");return r(),s(d,null,[u,f,p,e("h3",_,[y,g,o(a,{text:"required"})]),e("ul",null,[b,e("li",null,[m,e("a",x,[v,o(n)])])]),k,T,I,B,S,e("ul",null,[e("li",null,[e("a",V,[w,o(n)])])]),C,e("ul",null,[e("li",null,[e("a",O,[q,o(n)])])])],64)}var F=c(h,[["render",E]]);export{F as default};
