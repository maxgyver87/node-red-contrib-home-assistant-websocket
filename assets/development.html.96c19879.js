import{h as n,o as s,c as d,a as e,e as a,F as c,i as r,g as o}from"./app.7a8ebebe.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const l={},h=r(`<h1 id="development" tabindex="-1"><a class="header-anchor" href="#development" aria-hidden="true">#</a> Development</h1><p>An environment with Home Assistant/Node Red can be easily spun up using docker and docker-compose along with built in VSCode debug enabled.</p><ol><li>Clone this repository: <code>git clone https://github.com/zachowj/node-red-contrib-home-assistant-websocket.git</code></li><li>Install node dependencies as usual: <code>cd node-red-contrib-home-assistant-websocket &amp;&amp; npm</code></li><li>Start the docker dev environment: <code>npm run dev</code> a. <em>Note: First run will take a bit to download the images ( home-assistants image is over 1gb (yikes!) after that launch is much quicker)</em> b. <em>Note: Also first run load of HomeAssistant web interface seems very slow, but after first time it&#39;s also much faster</em></li><li>The <code>npm run dev</code> command will leave you with a terminal spitting out logs, <code>ctrl+c</code> out of this and it kills all the servers by design, just run <code>npm run dev</code> again to pick back up. The following services and ports are launched in the <code>dev</code> script</li></ol><table><thead><tr><th>service</th><th>port mappings</th><th>info</th></tr></thead><tbody><tr><td>home-assistant</td><td><code>8123:8123</code>, <code>8300:8300</code></td><td>exposed for local access via browser</td></tr><tr><td>node-red</td><td><code>1880:1880</code>, <code>9123:9229</code></td><td>exposed for local access via browser, <code>9123</code> is used for debugging. Includes default flow example connected to <code>home-assistant</code></td></tr></tbody></table><h2 id="docker-tips" tabindex="-1"><a class="header-anchor" href="#docker-tips" aria-hidden="true">#</a> Docker Tips</h2><ol><li>If you run into environment issues running <code>npm run dev:clean</code> should remove all docker data and get you back to a clean state</li><li>All data will be discarded when the docker container is removed. You can map volumes locally to persist data. Create and copy as directed below then modify <code>docker-compose.yaml</code> to map the container directories to the created host dirs below. <em>See: <code>./_docker/docker-compose.mapped.yaml</code> for an example or just use that file to launch manually</em></li></ol><div class="language-bash ext-sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> -p _docker-volumes/home-assistant/config
$ <span class="token function">mkdir</span> -p _docker-volumes/node-red/data
$ <span class="token function">cp</span> _docker/home-assistant/root-fs/config/* _docker-volumes/home-assistant/config/
$ <span class="token function">cp</span> _docker/node-red/root-fs/data/*  _docker-volumes/node-red/data
</code></pre></div><h2 id="node-debugger-via-vscode" tabindex="-1"><a class="header-anchor" href="#node-debugger-via-vscode" aria-hidden="true">#</a> Node Debugger via VSCode</h2><p>Optional but it&#39;s pretty nice if you have VSCode installed.</p>`,9),u=e("li",null,"Open the project directory in VSCode",-1),p=e("li",null,[o("Go to the debug tab ( or "),e("code",null,"cmd/ctrl+shift+d"),o(")")],-1),m=e("li",null,'In the debug tab you should see an target for "Attach: Docker", run that guy and you can place debug breakpoints and changes will be reloaded within docker automatically',-1),b=o("Open "),f={href:"http://localhost:8123",target:"_blank",rel:"noopener noreferrer"},_=o("http://localhost:8123"),g=o(" for HomeAssistant (password is "),k=e("code",null,"password",-1),v=o(" by default)."),w=o("For node-red either open up via the HomeAssistant web link or left hand menu or just open a browser tab to "),y={href:"http://localhost:1880",target:"_blank",rel:"noopener noreferrer"},x=o("http://localhost:1880");function A(N,V){const t=n("ExternalLinkIcon");return s(),d(c,null,[h,e("ul",null,[u,p,m,e("li",null,[b,e("a",f,[_,a(t)]),g,k,v]),e("li",null,[w,e("a",y,[x,a(t)])])])],64)}var I=i(l,[["render",A]]);export{I as default};
