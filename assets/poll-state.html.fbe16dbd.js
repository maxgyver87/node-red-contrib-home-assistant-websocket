import{h as i,o as r,c as d,a as e,e as a,F as h,g as t,i as o}from"./app.7a8ebebe.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const c={},u=e("h1",{id:"poll-state",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#poll-state","aria-hidden":"true"},"#"),t(" Poll State")],-1),p=e("p",null,"Polls for the state at regular intervals, optionally also outputting at the start and when the state changes. Useful for either alert for non-communicating devices (time since change > 1 day for example) or dashboard graphs with consistent interval charts",-1),f=e("h2",{id:"configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),t(" Configuration")],-1),_={id:"entity-id",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#entity-id","aria-hidden":"true"},"#",-1),g=t(" Entity ID "),b=o('<p>The entity id of the entity to poll for.</p><h3 id="update-interval" tabindex="-1"><a class="header-anchor" href="#update-interval" aria-hidden="true">#</a> Update Interval</h3><ul><li>Type: <code>number</code></li></ul><p>The amount of time between checking/sending updates.</p><h3 id="if-state" tabindex="-1"><a class="header-anchor" href="#if-state" aria-hidden="true">#</a> If State</h3><ul><li>Type: <code>string</code></li></ul><p>If the conditional statement is evaluated as true send the message to the first output otherwise send it to the second output. If blank there will only be one output.</p><p><strong>Also see:</strong></p>',8),y={href:"/guide/conditionals.md",target:"_blank",rel:"noopener noreferrer"},x=t("Conditionals"),T=o('<h3 id="state-type" tabindex="-1"><a class="header-anchor" href="#state-type" aria-hidden="true">#</a> State Type</h3><ul><li>Type: <code>string</code></li></ul><p>Convert the state of the entity to the selected type. Boolean will be converted to true based on if the string is equal by default to (y|yes|true|on|home|open). Original value stored in msg.data.original_state</p><h3 id="output-initially" tabindex="-1"><a class="header-anchor" href="#output-initially" aria-hidden="true">#</a> Output Initially</h3><ul><li>Type: <code>boolean</code></li></ul><p>Output once on startup/deploy then on each interval</p><h3 id="expose-to-home-assistant" tabindex="-1"><a class="header-anchor" href="#expose-to-home-assistant" aria-hidden="true">#</a> Expose to Home Assistant</h3><ul><li>Type: <code>boolean</code></li></ul>',8),v=t("Creates a switch within Home Assistant to enable/disable this node. This feature requires "),k={href:"https://github.com/zachowj/hass-node-red",target:"_blank",rel:"noopener noreferrer"},w=t("Node-RED custom integration"),I=t(" to be installed in Home Assistant"),S=o('<h2 id="outputs" tabindex="-1"><a class="header-anchor" href="#outputs" aria-hidden="true">#</a> Outputs</h2><h3 id="topic" tabindex="-1"><a class="header-anchor" href="#topic" aria-hidden="true">#</a> topic</h3><ul><li>Type: <code>string</code></li></ul><p>entity_id of changed entity</p><h3 id="payload" tabindex="-1"><a class="header-anchor" href="#payload" aria-hidden="true">#</a> payload</h3><ul><li>Type: <code>object</code></li></ul><p>The last known state of the entity</p><h3 id="data-timesincechanged" tabindex="-1"><a class="header-anchor" href="#data-timesincechanged" aria-hidden="true">#</a> data.timeSinceChanged</h3><ul><li>Type: <code>string</code></li></ul><p>Human readable format string of time since last updated, example &quot;1 hour ago&quot;</p><h3 id="data-timesincechangedms" tabindex="-1"><a class="header-anchor" href="#data-timesincechangedms" aria-hidden="true">#</a> data.timeSinceChangedMs</h3><ul><li>Type: <code>number</code></li></ul><p>Number of milliseconds since last changed</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>',14),C={href:"https://home-assistant.io/docs/configuration/state_object/",target:"_blank",rel:"noopener noreferrer"},B=t("Home Assistant State Objects");function E(N,q){const s=i("Badge"),n=i("ExternalLinkIcon");return r(),d(h,null,[u,p,f,e("h3",_,[m,g,a(s,{text:"required"})]),b,e("ul",null,[e("li",null,[e("a",y,[x,a(n)])])]),T,e("p",null,[v,e("a",k,[w,a(n)]),I]),S,e("ul",null,[e("li",null,[e("a",C,[B,a(n)])])])],64)}var O=l(c,[["render",E]]);export{O as default};
