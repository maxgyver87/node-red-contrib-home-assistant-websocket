import{h as t,o as r,c as i,a as e,e as o,F as s,g as a,i as c}from"./app.7a8ebebe.js";import{_ as h}from"./plugin-vue_export-helper.21dcd24c.js";const l={},p=e("h1",{id:"fire-event",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fire-event","aria-hidden":"true"},"#"),a(" Fire Event")],-1),u=e("p",null,"Fire an event to Home Assistants event bus",-1),f=e("h2",{id:"configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),a(" Configuration")],-1),_={id:"event",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#event","aria-hidden":"true"},"#",-1),y=a(" Event "),b=c('<ul><li>Type: <code>string</code></li></ul><p>Event name to fire</p><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><ul><li>Type: <code>Object</code></li></ul><p>JSON object to pass along</p><h2 id="inputs" tabindex="-1"><a class="header-anchor" href="#inputs" aria-hidden="true">#</a> Inputs</h2><p>If the incoming message has a <code>payload</code> property with <code>event</code> set it will override any config values if set. If the incoming message has a <code>payload.data</code> that is an object or parsable into an object these properties will be <strong>merged</strong> with any config values set. If the node has a property value in its config for <code>Merge Context</code> then the <code>flow</code> and <code>global</code> contexts will be checked for this property which should be an object that will also be merged into the data payload.</p><h3 id="payload-event" tabindex="-1"><a class="header-anchor" href="#payload-event" aria-hidden="true">#</a> payload.event</h3><ul><li>Type: <code>string</code></li></ul><p>Event to fire</p><h3 id="payload-data" tabindex="-1"><a class="header-anchor" href="#payload-data" aria-hidden="true">#</a> payload.data</h3><ul><li>Type: <code>Object</code></li></ul><p>Event data to send</p><h2 id="outputs" tabindex="-1"><a class="header-anchor" href="#outputs" aria-hidden="true">#</a> Outputs</h2><h3 id="payload-event-type" tabindex="-1"><a class="header-anchor" href="#payload-event-type" aria-hidden="true">#</a> payload.event_type</h3><ul><li>Type: <code>string</code></li></ul><p>Event Type that was fired</p><h3 id="payload-data-1" tabindex="-1"><a class="header-anchor" href="#payload-data-1" aria-hidden="true">#</a> payload.data</h3><ul><li>Type: <code>Object</code></li></ul><p>The event <code>data</code> sent if one was used</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>',21),g={href:"https://developers.home-assistant.io/docs/en/dev_101_events.html#firing-events",target:"_blank",rel:"noopener noreferrer"},m=a("Home Assistant Events");function x(E,w){const n=t("Badge"),d=t("ExternalLinkIcon");return r(),i(s,null,[p,u,f,e("h3",_,[v,y,o(n,{text:"required"})]),b,e("p",null,[e("a",g,[m,o(d)])])],64)}var k=h(l,[["render",x]]);export{k as default};
